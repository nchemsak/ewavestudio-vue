/* _themes.scss */
@use "sass:map";

/* 1) Theme tokens as a Sass map */
$themes: (
    dark: (
        bg: #0f1116,
        panel: #171a21,
        text: #e9e9ef,
        muted: #a7aabb,
        surface1: #232733,
        surface2: #1c202b,
        accent: 276,
        accent2: 195,
        accent3: 320
    ),
    light: (
        bg: #f7f8fa,
        panel: #ffffff,
        text: #121419,
        muted: #5a5e6b,
        surface1: #ffffff,
        surface2: #eceff4,
        accent: 235,
        accent2: 200,
        accent3: 320
    ),
    synthwave: (
        bg: #0d0221,
        panel: #160b2e,
        text: #fdfdff,
        muted: #c9c2ff,
        surface1: #2a0f52,
        surface2: #1a0b3a,
        accent: 305,
        accent2: 190,
        accent3: 260
    )
);

/* 2) Mixin to emit CSS custom properties for a theme class */
@mixin emit-theme($name, $t) {
    .theme-#{$name} {
        --pt-bg: #{map.get($t, bg)};
        --pt-panel: #{map.get($t, panel)};
        --pt-text: #{map.get($t, text)};
        --pt-muted: #{map.get($t, muted)};
        --pt-surface-1: #{map.get($t, surface1)};
        --pt-surface-2: #{map.get($t, surface2)};
        --pt-accent: #{map.get($t, accent)};
        --pt-accent-2: #{map.get($t, accent2)};
        --pt-accent-3: #{map.get($t, accent3)};
        --pt-btn-border: hsl(var(--pt-accent) 80% 60%);
        --pt-btn-glow: hsl(var(--pt-accent) 90% 60% / 0.4);
    }
}

/* 3) Base (root) â€” tokens + DEFAULT THEME = dark */
$dark: map.get($themes, dark);

:root {
    /* static tokens */
    --pt-radius: 12px;
    --pt-radius-sm: 8px;
    --pt-gap: 10px;
    --pt-title-size: 1.4rem;
    --pt-label-size: 0.85rem;

    /* default (dark) variables */
    --pt-bg: #{map.get($dark, bg)};
    --pt-panel: #{map.get($dark, panel)};
    --pt-text: #{map.get($dark, text)};
    --pt-muted: #{map.get($dark, muted)};
    --pt-surface-1: #{map.get($dark, surface1)};
    --pt-surface-2: #{map.get($dark, surface2)};
    --pt-accent: #{map.get($dark, accent)};
    --pt-accent-2: #{map.get($dark, accent2)};
    --pt-accent-3: #{map.get($dark, accent3)};
    --pt-btn-border: hsl(var(--pt-accent) 80% 60%);
    --pt-btn-glow: hsl(var(--pt-accent) 90% 60% / 0.4);
}

/* 4) Theme classes for toggling at runtime */
@each $name, $t in $themes {
    @include emit-theme($name, $t);
}

/* 5) Reusable UI classes (global) */
.pt-panel {
    background: var(--pt-panel);
    color: var(--pt-text);
    border-radius: 12px;
    padding: 16px;
    max-width: 560px;
    box-shadow: 0 10px 30px rgb(0 0 0 / 0.25);
}
.pt-title {
    font-size: var(--pt-title-size);
    font-weight: 700;
    margin: 0 0 8px;
}
.pt-section {
    position: relative;
}
.pt-section + .pt-section {
    margin-top: 22px;
    padding-top: 14px;
}
.pt-section + .pt-section::before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, rgb(255 255 255 / 0.06), transparent);
}
.pt-section-title {
    color: var(--pt-muted);
    font-size: 0.95rem;
    font-weight: 600;
    margin-bottom: 8px;
}

.pt-btn-group,
.pt-actions {
    display: flex;
    flex-wrap: wrap;
    gap: var(--pt-gap);
    border-radius: 12px;
    background: transparent;
    padding: 0;
}

.pt-actions {
    background: transparent; /* remove row gradient */
    padding: 0; /* tighter */
    gap: var(--pt-gap);
}

// .pt-btn {
//     appearance: none;
//     border: 1px solid var(--pt-btn-border);
//     border-radius: 8px;
//     padding: 8px 14px;
//     font-size: 0.9rem;
//     color: var(--pt-text);
//     cursor: pointer;
//     background: linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2));
//     background-clip: padding-box;
//     transition:
//         transform 0.12s ease,
//         box-shadow 0.25s ease,
//         border-color 0.25s ease,
//         filter 0.25s ease;
//     box-shadow:
//         inset 0 0 0 1px rgb(255 255 255 / 0.03),
//         0 2px 14px rgb(0 0 0 / 0.25);
//     line-height: 1.15;
//     min-height: 38px;
// }

.pt-btn {
    /* transparent border so the second background layer can show as the border */
    border: 1px solid transparent;
    border-radius: var(--pt-radius-sm);
    color: var(--pt-text);
    cursor: pointer;
    min-height: 38px;
    line-height: 1.15;
    padding: 8px 14px;
    transition:
        transform 0.12s ease,
        filter 0.25s ease,
        box-shadow 0.25s ease;

    /* two backgrounds:
     1) inner surface (padding-box)
     2) gradient border (border-box)
  */
    background:
        linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2)) padding-box,
        linear-gradient(
                90deg,
                hsl(var(--btn-hue, var(--pt-accent)) 84% 64% / 0.95),
                hsl(calc(var(--btn-hue, var(--pt-accent)) + 10) 84% 64% / 0.95)
            )
            border-box;

    box-shadow:
        inset 0 0 0 1px rgb(255 255 255 / 0.03),
        0 2px 14px rgb(0 0 0 / 0.25);
}

.pt-btn:hover {
    box-shadow:
        inset 0 0 0 1px rgb(255 255 255 / 0.06),
        0 4px 16px var(--pt-btn-glow);
    filter: saturate(1.08);
}

.pt-btn:active {
    transform: translateY(1px) scale(0.98);
}

.pt-btn:focus-visible {
    outline: 2px solid hsl(var(--btn-hue, var(--pt-accent)) 80% 60%);
    outline-offset: 2px;
}

/* Slight hue drift across a row */
.pt-btn-group .pt-btn {
    --btn-hue: var(--pt-accent);
}
.pt-btn-group .pt-btn:nth-child(1) {
    --btn-hue: calc(var(--pt-accent) - 12);
}
.pt-btn-group .pt-btn:nth-child(2) {
    --btn-hue: calc(var(--pt-accent) - 6);
}
.pt-btn-group .pt-btn:nth-child(3) {
    --btn-hue: calc(var(--pt-accent));
}
.pt-btn-group .pt-btn:nth-child(4) {
    --btn-hue: calc(var(--pt-accent) + 6);
}
.pt-btn-group .pt-btn:nth-child(5) {
    --btn-hue: calc(var(--pt-accent) + 12);
}
.pt-btn-group .pt-btn:nth-child(6) {
    --btn-hue: calc(var(--pt-accent) + 18);
}
/* add more nth-child rows if you have many buttons */

/* Variants still work by overriding the hue */
.pt-danger {
    --btn-hue: 7;
} /* red */
.pt-accent-cool {
    --btn-hue: var(--pt-accent-2);
} /* cyan/blue */
.pt-accent-warm {
    --btn-hue: var(--pt-accent-3);
} /* magenta */

.pt-select,
.pt-btn {
    min-height: 38px;
    line-height: 1.15;
}

.pt-danger {
    --pt-btn-border: hsl(7 90% 60%);
    --pt-btn-glow: hsl(7 90% 60% / 0.45);
}
.pt-accent-cool {
    --pt-btn-border: hsl(var(--pt-accent-2) 80% 60%);
}
.pt-accent-warm {
    --pt-btn-border: hsl(var(--pt-accent-3) 80% 60%);
}
.pt-glow {
    box-shadow: 0 0 12px var(--pt-btn-glow);
}

.pt-fields {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: var(--pt-gap);
    align-items: end;
    margin-bottom: 8px;
}
.pt-field {
    display: grid;
    gap: 6px;
}
.pt-label {
    font-size: var(--pt-label-size);
    color: var(--pt-muted);
}

.pt-select {
    appearance: none;
    width: 100%;
    color: var(--pt-text);
    background: linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2));
    border: 1px solid var(--pt-btn-border);
    padding: 8px 36px 8px 12px;
    line-height: 1.2;
    transition:
        box-shadow 0.25s ease,
        border-color 0.25s ease,
        filter 0.25s ease;

    --ring: 0 0 0 0 hsl(var(--pt-accent) 90% 60% / 0);
    box-shadow:
        var(--ring),
        inset 0 0 0 1px rgb(255 255 255 / 0.03),
        0 2px 10px rgb(0 0 0 / 0.25);

    border: 1px solid transparent;
    border-radius: var(--pt-radius-sm);
    background:
        linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2)) padding-box,
        linear-gradient(90deg, hsl(var(--pt-accent) 84% 64% / 0.95), hsl(calc(var(--pt-accent) + 10) 84% 64% / 0.95))
            border-box;
}
.pt-select:hover {
    border-color: var(--pt-btn-border);
    box-shadow: 0 0 10px var(--pt-btn-glow);
    filter: saturate(1.05);
    box-shadow:
        0 0 0 0 hsl(var(--pt-accent) 90% 60% / 0),
        inset 0 0 0 1px rgb(255 255 255 / 0.06),
        0 4px 14px var(--pt-btn-glow);
    filter: saturate(1.05);
}

.pt-select:focus-visible {
    --ring: 0 0 0 3px hsl(var(--pt-accent) 90% 60% / 0.35);
}

/* Make the popup list darker where browsers allow it */
.pt-select option,
.pt-select optgroup {
    background-color: var(--pt-panel);
    color: var(--pt-text);
}

/* Selected item in the list (support varies) */
.pt-select:focus option:checked {
    background-color: color-mix(in oklab, var(--pt-btn-border), transparent 70%);
    color: var(--pt-text);
}

/* Firefox-only focus ring clean-up */
@-moz-document url-prefix() {
    .pt-select {
        color-scheme: dark; /* helps Firefox pick dark popover styles */
    }
}

.pt-chips {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
}
.pt-chip {
    background: linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2));
    border: 1px dashed var(--pt-btn-border);
    color: var(--pt-text);
    padding: 6px 10px;
    border-radius: 999px;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.2s ease;

    border-style: dashed;
    border-color: color-mix(in oklab, var(--pt-btn-border), transparent 40%);
}
.pt-chip:hover {
    box-shadow: 0 0 10px var(--pt-btn-glow);
}
.pt-chip.is-active {
    border-style: solid;
    background: linear-gradient(145deg, var(--pt-surface-2), var(--pt-surface-1));
    box-shadow: 0 0 10px var(--pt-btn-glow);
}

.pt-meta {
    color: var(--pt-muted);
    font-size: 0.9rem;
    margin: 6px 2px 10px;
}

:root,
.theme-dark,
.theme-synthwave {
    color-scheme: dark;
} /* dark themes */

.theme-light {
    color-scheme: light;
} /* light theme */

/* Encourage dark UI on the control and its items */
.pt-select,
.pt-select option,
.pt-select optgroup {
    color-scheme: dark;
}

/* Trigger looks like your .pt-select/.pt-btn (gradient border) */
.pt-selectbtn {
    border: 1px solid transparent;
    border-radius: var(--pt-radius-sm);
    min-height: 38px;
    width: 100%;
    text-align: left;
    padding: 8px 36px 8px 12px;
    color: var(--pt-text);
    cursor: pointer;

    background:
        linear-gradient(145deg, var(--pt-surface-1), var(--pt-surface-2)) padding-box,
        linear-gradient(90deg, hsl(var(--pt-accent) 84% 64% / 0.95), hsl(calc(var(--pt-accent) + 10) 84% 64% / 0.95))
            border-box;

    box-shadow:
        inset 0 0 0 1px rgb(255 255 255 / 0.03),
        0 2px 10px rgb(0 0 0 / 0.25);
    line-height: 1.2;
    position: relative;
}
.pt-selectbtn:hover {
    box-shadow:
        inset 0 0 0 1px rgb(255 255 255 / 0.06),
        0 4px 14px var(--pt-btn-glow);
    filter: saturate(1.05);
}
.pt-selectbtn:focus-visible {
    outline: 2px solid hsl(var(--pt-accent) 80% 60%);
    outline-offset: 2px;
}

.pt-select-value {
    pointer-events: none;
}
.pt-caret {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    opacity: 0.85;
}

/* Fullscreen invisible layer to capture outside clicks */
.pt-select-overlay {
    position: fixed;
    inset: 0;
    z-index: 1000;
}

/* Popover panel */
.pt-menu {
    position: fixed; /* set by inline style */
    max-height: 260px;
    overflow: auto;
    border: 1px solid transparent;
    border-radius: var(--pt-radius-sm);
    padding: 6px;
    background:
        linear-gradient(145deg, var(--pt-panel), var(--pt-surface-2)) padding-box,
        linear-gradient(90deg, hsl(var(--pt-accent) 84% 64% / 0.95), hsl(calc(var(--pt-accent) + 10) 84% 64% / 0.95))
            border-box;
    box-shadow:
        0 12px 40px rgb(0 0 0 / 0.45),
        inset 0 0 0 1px rgb(255 255 255 / 0.03);
    color: var(--pt-text);
    backdrop-filter: blur(2px);
    color-scheme: dark; /* guarantees no white flash inside */
}

/* Items */
.pt-option {
    padding: 8px 10px;
    border-radius: 8px;
    cursor: pointer;
    white-space: nowrap;
}
.pt-option.is-active {
    background: hsl(var(--pt-accent) 80% 60% / 0.12);
}
.pt-option.is-selected {
    box-shadow: inset 0 0 0 1px hsl(var(--pt-accent) 80% 60% / 0.6);
}
.pt-option.is-disabled {
    opacity: 0.45;
    cursor: not-allowed;
}
